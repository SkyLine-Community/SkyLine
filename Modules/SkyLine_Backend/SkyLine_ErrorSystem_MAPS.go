package SkyLine

import "fmt"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////// ***									Error system file for SkyLine 									  *** /////////////////
/////////// 																											 /////////////////
/////////// 																											 /////////////////
/////////// 																											 /////////////////
/////////// 																											 /////////////////
/////////// 																											 /////////////////
/////////// 																											 /////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var StatementMap_Parser_SingleArgument = map[string]func(ErrorStatement, Issue, token string) string{
	"FLOAT_PARSE_ERR": func(Statement, issue, token string) string {
		var message string
		message += "\033[38;5;56m|\033[38;5;51m*\033[38;5;56m|----------\n"
		message += "\033[38;5;56m|\033[38;5;51mC\033[38;5;56m|\033[38;5;56m(\033[38;5;69mCode\033[38;5;56m)    \033[38;5;124m=> INT_PARSE_ERR\n"
		message += "\033[38;5;56m|\033[38;5;51mM\033[38;5;56m|\033[38;5;56m(\033[38;5;69mMessage\033[38;5;56m) \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51mI\033[38;5;56m|\033[38;5;56m(\033[38;5;69mIssue\033[38;5;56m)   \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51mT\033[38;5;56m|\033[38;5;56m(\033[38;5;69mToken\033[38;5;56m)   \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51m0\033[38;5;56m|\033[38;5;56m------------\n"
		message = fmt.Sprintf(message, Statement, issue, token)
		return message
	},
	"PREFIX_PARSE_ERR": func(Statement, issue, token string) string {
		var message string
		message += "\033[38;5;56m|\033[38;5;51m*\033[38;5;56m|----------\n"
		message += "\033[38;5;56m|\033[38;5;51mC\033[38;5;56m|\033[38;5;56m(\033[38;5;69mCode\033[38;5;56m)    \033[38;5;124m=> INT_PARSE_ERR\n"
		message += "\033[38;5;56m|\033[38;5;51mM\033[38;5;56m|\033[38;5;56m(\033[38;5;69mMessage\033[38;5;56m) \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51mI\033[38;5;56m|\033[38;5;56m(\033[38;5;69mIssue\033[38;5;56m)   \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51mT\033[38;5;56m|\033[38;5;56m(\033[38;5;69mToken\033[38;5;56m)   \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51m0\033[38;5;56m|\033[38;5;56m------------\n"
		message = fmt.Sprintf(message, Statement, issue, token)

		return message
	},
	"INT_PARSE_ERR": func(Statement, issue, token string) string {
		var message string
		message += "\033[38;5;56m|\033[38;5;51m*\033[38;5;56m|----------\n"
		message += "\033[38;5;56m|\033[38;5;51mC\033[38;5;56m|\033[38;5;56m(\033[38;5;69mCode\033[38;5;56m)    \033[38;5;124m=> INT_PARSE_ERR\n"
		message += "\033[38;5;56m|\033[38;5;51mM\033[38;5;56m|\033[38;5;56m(\033[38;5;69mMessage\033[38;5;56m) \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51mI\033[38;5;56m|\033[38;5;56m(\033[38;5;69mIssue\033[38;5;56m)   \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51mT\033[38;5;56m|\033[38;5;56m(\033[38;5;69mToken\033[38;5;56m)   \033[38;5;124m=> %s\n"
		message += "\033[38;5;56m|\033[38;5;51m0\033[38;5;56m|\033[38;5;56m------------\n"
		message = fmt.Sprintf(message, Statement, issue, token)
		return message
	},
}
